<div class="main">
    <div class="mainHeader">
        <button type="button" class="sidebarButton">
            <i class="icon iconSidebar"></i>
        </button>
        <p style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">Gửi tiền</p>
    </div>
    <div>
        <form action="/passbook/details/deposit/loading" id="form" method="POST">
            <input type="number" name="passbookID" value="{{passbookID}}" hidden>
            <div class = "fullnameBox box">
                <label for="fullname">Tên khách hàng:</label>
                <input type="text" id="fullname" name="fullname" value="{{fullname}}" readonly>
            </div>
            <div class = "booknameBox box">
                <label for="bookname">Tên sổ:</label>
                <input type="text" id="bookname" name="bookname" value="{{bookname}}" readonly>
            </div>
             <div class = "bookdepositBox box">
                <label for="bookdeposit">Số tiền trong sổ:</label>
                <input type="number" id="bookdeposit" name="bookdeposit" value="{{bookdeposit}}" readonly>
            </div>
            <div class = "depositBox box">
                <label for="deposit">Số tiền gửi:</label>
                <input type="number" id="deposit" name="deposit" placeholder="Tối thiểu 100000" step="1" min="100000">
            </div>
            <div class = "dateBox box">
                <label for="date">Ngày gửi:</label>
                <input type="date" id="date" name="date" value ="{{date}}" readonly>
            </div>
            <div id="btn_side">
                <input id="confirmBtn" type="submit" value="Gửi tiền"></input>
                <a href="/passbook/details"><button id="gobackBtn" type="button">Quay lại</button></button></a>
            </div>
        </form>
    </div>
</div>
<style>
    /* Dark mode styles */
    body.dark-mode {
        background-color: #121212;
        color: #ffffff;
    }
body.dark-mode .mainHeader p,
body.dark-mode label {
    color: #ffffff;
}	
    body.dark-mode .mainDashboard {
        background-color: #1e1e1e;
    }

    body.dark-mode .main {
        background-color: #1e1e1e;
    }

    body.dark-mode .summary .sum {
        background: linear-gradient(65.44deg, #4e4e4e 0%, #3e3e3e 94.64%);
    }
body.dark-mode .mainHeader.p {
        color: #ffffff;
    }
    body.dark-mode .summary .send,
    body.dark-mode .summary .withdraw,
    body.dark-mode .mainDashboard .noti {
        background-color: #333333;
    }

    body.dark-mode .summary .send p,
    body.dark-mode .summary .withdraw p {
        color: #bbbbbb;
    }

    body.dark-mode .summary .send h1,
    body.dark-mode .summary .withdraw h1 {
        color: #ffffff;
    }
body.dark-mode .username {
    color: #ffffff;
}
    /* Other styles for elements in dark mode */
    body.dark-mode .dashboardHeader,
    body.dark-mode .profilebar,

    body.dark-mode .savingbook,
    body.dark-mode .noti .amount {
        color: #ffffff;
    }

    :root {
        --theme-toggle-width: 5rem;
        --theme-toggle-height: 2.5rem;
        --theme-toggle-circle-width: 0;
        --theme-toggle-circle-dimensions: calc(var(--theme-toggle-height) - 0.5rem);
    }

    body {
        display: grid;
        place-items: center;
        height: 100vh;
        min-height: 10rem;
        background-color: #fff;
        transition: background-color 0.5s;
    }

    .dark-body {
        background-color: #111;
    }

    .theme-toggle {
        margin-left: 20px;
        -webkit-appearance: none;
        outline: none;
        cursor: pointer;
        height: var(--theme-toggle-height);
        width: var(--theme-toggle-width);
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        position: relative;
        border-radius: var(--theme-toggle-circle-dimensions);
        padding: 0.2rem;
        background-color: #ffffff;
        transition: background-color 0.5s;
    }

    .theme-toggle:before {
        content: "";
        width: var(--theme-toggle-circle-dimensions);
        height: var(--theme-toggle-circle-dimensions);
        background-color: #000000;
        position: absolute;
        border-radius: 50%;
        top: 50%;
        transform: translateY(-50%) translateX(0%);
        transition: transform 0.5s;
    }

    .theme-toggle:after {
        content: "Light mode";
        white-space: nowrap;
        color: #ffffff;
        position: absolute;
        left: calc(100% + 1.5rem);
        font-size: 1.3rem;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
    }

    .theme-toggle:checked {
        background-color: #000000;
        border: none;
    }

    .theme-toggle:checked:before {
        background-color: #fefefe;
        transform: translateY(-50%) translateX(calc(var(--theme-toggle-width) - var(--theme-toggle-height)));
    }

    .theme-toggle:checked:after {
        content: "Dark mode";
        color: #000000;
    }
</style>
<script>
    function setDarkMode(isDark) {
        if (isDark) {
            document.body.classList.add('dark-mode');
        } else {
            document.body.classList.remove('dark-mode');
        }
    }

    // Check localStorage for dark mode preference on page load
    const darkModePreference = localStorage.getItem('darkMode') === 'true';
    setDarkMode(darkModePreference);

    // Handle dark mode toggle
    const toggleButton = document.getElementById('darkModeToggle');
    toggleButton.checked = darkModePreference;
    toggleButton.addEventListener('change', () => {
        const isDarkMode = toggleButton.checked;
        setDarkMode(isDarkMode);
        localStorage.setItem('darkMode', isDarkMode);
    });
</script>